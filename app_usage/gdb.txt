-*-org-*-
#+TITLE:  GNU Debugger (GDB)

 - GDB: The GNU Project Debugger
 - [[https://www.gnu.org/software/gdb/][GDB website]]

* Term
 - GDB - The GNU Project Debugger
 - DDD - GNU DDD (Data Display Debugger) is a graphical front-end for command-line debuggers
    - GDB, DBX, JDB, bashdb, pydb, ...
    - [[https://www.gnu.org/software/ddd/][DDD website]]
 - GUD - emacs mode (gud-gdb)for GDB

* Command
  | Command             | Describe                   | Note |
  |---------------------+----------------------------+------|
  | break <line_number> | interrupt on <line_number> |      |
  |                     |                            |      |


* 

* Building GDB and GDBserver for cross debugging
 - host
     - The system that is going to run the software once it is built. Once the software
       has been built, it will execute on this particular system.
 - build
    The system where the build process is being executed. For most uses this
    would be the same as the host system, but in case of cross-compilation
    the two obviously differ.

 - target
    The system against which the software being built will run on. This only exists, or 
    rather has a meaning, when the software being built may interact specifically with a
    system that differs from the one it's being executed on (our host). This is the case
    for compilers, debuggers, profilers and analyzers and other tools in general.
** Building GDB 
   #+BEGIN_SRC bash
   # host is current PC, target is arm-linux-gnueabi device
   $ /path/to/gdb-src/configure --target=arm-linux-gnueabi
   checking build system type... x86_64-unknown-linux-gnu
   checking host system type... x86_64-unknown-linux-gnu
   checking target system type... arm-unknown-linux-gnueabi
   #+END_SRC
** Building GDBserver
   - execute on remote device
   #+BEGIN_SRC bash
   # GDB server execute on arm-linux-gnueabi device
   $ /path/to/gdb-src/gdb/gdbserver/configure --host=arm-linux-gnueabi
   checking build system type... x86_64-unknown-linux-gnu
   checking host system type... arm-unknown-linux-gnueabi
   checking target system type... arm-unknown-linux-gnueabi
   #+END_SRC

* Misc
  | Command in gdb                      | Describe                                                                                       |
  |-------------------------------------+------------------------------------------------------------------------------------------------|
  | handle SIGILL nostop noprint        | allow your program to continue, gdb will just tell you that the signal was received            |
  | show follow-fork-mode               | show current fork arguments                                                                    |
  | set follow-fork-mode <parent/child> | debug on parent or debug on child                                                              |
  | set detach-on-fork  <on/off>        | on - detach role of follow-for-mode, off - debug on role of follow-fork-mode and suspend other |
  | info shared                         | list loaded shared library                                                                     |
  | set solib-serarch-path <path>       | find shared library                                                                            |


* Misc
** debug on gdb
  - gdb program  - use gdb to execute program
  - gdb program core_dump - use gdb to view core dump file
  - gdb program pid - use gdb to debug running process
** debug on gdb with program arguments
  - gdb -args program args
  - or gdb program then enter *run* with arguments
** exit gdb
  - End-of-File (Ctrl + d)
  - or quit
** shell on gdb
  - shell command args
  - make make-args = shell make make-args
** help
  - help
** info and show
  - info - get debug related info
  - show - get GDB settings
